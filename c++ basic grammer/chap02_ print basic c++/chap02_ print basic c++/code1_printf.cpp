/*
<언어의 구별>
c와 c++
절차지향 객체지향
전자는 순차적으로 프로그래밍하는 것
후자는 class 단위로 나위어 프로그래밍하는것
어떠한 행위들의 조합이라고 본다

오버라이딩 oop가능 함수명 중복 가능하다는 뜻
이런 문제로 c++에서는 using namespace로 그 객체가 어디 소속의 문구인지 
말해주어야한다.  근래는 std가 대부분의 객체를 포함한다.

c++과 파이썬
스크립트 언어, 컴파일러 언어

수정시 바로 번역하는 파이썬은 수정결과가 반영되지만
컴파일러 언어는 컴파일 되기 전까지는 그대로

*/
/* <출력예제>
#include <stdio.h>
// stdio.h라는 헤더 파일을 읽어로라는 뜻
void main() {
// void 값을 반환하지 말것 , 언제나 함수는 main()으로 이루어진다.
	printf("korea\n");
}
*/

/*
<프로젝트>
c++의 집합으로 실무용 작업 가능
sin은 이런 프로젝트들이 모인 실무용 프로그램
*/
#include <stdio.h>

void main() {
	int i, j;
	for (i = 1;i <= 15; i++) {
		for (j = 1;j <=i ;j++) {
			printf("*");
		}
		printf("\n");
	}
}

